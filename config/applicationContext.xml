<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
  http://www.springframework.org/schema/beans/spring-beans.xsd  
  http://www.springframework.org/schema/aop   
  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
  http://www.springframework.org/schema/context   
  http://www.springframework.org/schema/context/spring-context-3.0.xsd  
  http://www.springframework.org/schema/tx   
  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
  http://www.springframework.org/schema/util   
  http://www.springframework.org/schema/util/spring-util-4.0.xsd  
  http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring     
  http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd"
	default-lazy-init="false">
	<description>Spring公共配置文件 </description>
	<!-- ========================================================= -->
<!-- 扫描类包，将标注Spring注解的类自动转化Bean，同时完成Bean的注入 开启注解模式-->
   <context:component-scan base-package="com.thms.dao*.**"/>
   <context:component-scan base-package="com.thms.service*.**" />
<!-- ========================================================= -->
	<!-- 引入属性配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	<!-- 数据的链接 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!-- 设置JDBC驱动名称 -->
		<property name="driverClass" value="${jdbc.driver}" />
		<!-- 设置JDBC连接URL -->
		<property name="jdbcUrl" value="${jdbc.url}" />
		<!-- 设置数据库用户名 -->
		<property name="user" value="${jdbc.username}" />
		<!-- 设置数据库密码 -->
		<property name="password" value="${jdbc.password}" />
		<!-- 设置连接池初始值 -->
		<property name="initialPoolSize" value="5" />
		<property name="maxPoolSize" value ="100"></property>
	</bean>
   
   <!-- ========================================================= -->
   <!-- 注入jdbctemplate/hibernate/mybitas；同时都需要依赖一个数据源dataSource -->
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   		<property name="dataSource" ref="dataSource"></property>
   </bean>
   
   <!-- 事务型数据库和非事务型数据库 Mysql INonDB -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
		
<!-- 	<bean id="transactionManager"   
            class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  -->	
    
    <!-- 开始事务注解驱动 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- aop -->
    <aop:aspectj-autoproxy />
    <!-- 加上以下代码,可以不用@compoent注释 -->
    <!-- <bean id="aspect" class="com.thms.log.LogAopInterceptor"></bean> -->
    
<!--     <aop:config>
    	<aop:aspect  ref="logAopInterceptor">
    		<aop:around method="log" pointcut="execution(* com.thms.web.*.*(..))"/>
    	</aop:aspect>
    </aop:config> -->
    
    
     
<!-- ========================================================= -->	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<!-- 建立数据库连接 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 扫pojo(实体) -->
		<property name="namingStrategy">
			<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
		</property>
		<property name="packagesToScan" value="com.thms.bean"></property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop> 
				<!-- 如果是本地事物，及JDBC一个数据库： -->
<!-- 				<propety name=”Hibernate.current_session_context_class”>thread</propety> -->
				<!-- 如果是全局事物，及jta事物、多个数据库资源或事物资源： -->
<!-- 				<propety name=”Hibernate.current_session_context_class”>jta</propety>  -->
			</props>
		</property>
	</bean>
	
	
	
</beans>